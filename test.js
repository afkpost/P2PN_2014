// Generated by CoffeeScript 1.6.3
(function() {
  var Controllers, FileLogger, Peer, allStarted, async, caps, cluster, fstPort, i, numberOfPeers, offset, p, remaining, startPeer, _i;

  Peer = require('./peer');

  Controllers = require('./controllers');

  FileLogger = require('./filelogger');

  require('array-sugar');

  cluster = require('cluster');

  async = require('async');

  console.log("started");

  numberOfPeers = 2;

  caps = [1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 7, 8, 10].reverse();

  if (cluster.isMaster) {
    p = new Peer(8000, "Px", 10, [console, new FileLogger("logs/px.txt")]);
    new Controllers.CLI(p);
    for (i = _i = 0; _i < 8; i = ++_i) {
      cluster.fork({
        offset: i
      });
    }
    cluster.on('exit', function(worker, code, signal) {
      return console.log('a worker died');
    });
  } else {
    fstPort = 30000;
    offset = parseInt(process.env.offset);
    remaining = numberOfPeers;
    i = offset * numberOfPeers;
    allStarted = function() {
      return remaining === 0;
    };
    startPeer = function(done) {
      var peer;
      peer = new Peer(fstPort + i, "P" + i, caps[i % caps.length], [new FileLogger("logs/p" + i + ".txt")]);
      new Controllers.Simple(peer);
      i++;
      remaining--;
      return setTimeout(done, 500);
    };
    async.until(allStarted, startPeer, function() {});
  }

}).call(this);
